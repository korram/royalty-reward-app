version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: royalty-reward-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: royalty_reward
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - royalty-reward-network

  redis:
    image: redis:7-alpine
    container_name: royalty-reward-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - royalty-reward-network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: royalty-reward-mailhog
    ports:
      - '1025:1025' # SMTP server
      - '8025:8025' # Web UI
    networks:
      - royalty-reward-network

  minio:
    image: minio/minio:RELEASE.2023-12-14T18-51-57Z
    container_name: royalty-reward-minio
    ports:
      - '9000:9000' # API
      - '9001:9001' # Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - royalty-reward-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - royalty-reward-network
    depends_on:
      - postgres
    restart: unless-stopped

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight
    ports:
      - "8001:8001"
    volumes:
      - redisinsight_data:/db
    networks:
      - royalty-reward-network
    depends_on:
      - redis
    restart: unless-stopped

networks:
  royalty-reward-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  minio_data:
  pgadmin_data:
  redisinsight_data:
